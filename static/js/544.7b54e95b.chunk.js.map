{"version":3,"file":"static/js/544.7b54e95b.chunk.js","mappings":"qLAEaA,E,OAAgBC,GAAAA,IAAH,6D,oFCAbC,GAAYD,EAAAA,EAAAA,IAAO,MAAPA,CAAH,oNAYTE,GAAUF,EAAAA,EAAAA,IAAO,MAAPA,CAAH,wCAGPG,GAAYH,EAAAA,EAAAA,IAAO,OAAPA,CAAH,sBACTI,GAAaJ,EAAAA,EAAAA,IAAO,IAAPA,CAAH,+C,kBCTVK,EAAgB,SAAC,GAGvB,IAAD,IAFJC,KAAQC,EAEJ,EAFIA,GAAIC,EAER,EAFQA,MAAOC,EAEf,EAFeA,aAAcC,EAE7B,EAF6BA,YACjCC,EACI,EADJA,SAEA,OACE,UAACV,EAAD,YACE,UAAC,KAAD,CAAMW,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMH,GAA1C,WACE,SAACT,EAAD,CAASa,IAAG,yCAAoCL,GAAeM,IAAI,MAEnE,SAACZ,EAAD,oBAAgBI,MAChB,SAACL,EAAD,qBAAgBM,EAAaQ,MAAM,KAAK,GAAxC,UACM,MAGb,C,gHCrBYC,E,MAAaC,GAAAA,OAAa,CACrCC,QAAS,gCACTC,OAAQ,CACNC,QAAQ,sCCDCC,EAAW,SAACC,EAAUC,GACjC,OAA4BC,EAAAA,EAAAA,UAAS,QAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOpB,EAAP,KAAauB,EAAb,KAkCA,OAhCAC,EAAAA,EAAAA,YAAU,WACR,IAAIC,EACJ,OAAQP,GACN,IAAK,WACHO,EAAa,CAAC,GAAD,OAAIP,EAAJ,gBACb,MACF,IAAK,QACHO,EAAa,CAAC,UAAD,OAAWN,IACxB,MACF,IAAK,UACL,IAAK,UACHM,EAAa,CAAC,UAAD,OAAWN,EAAX,YAAoBD,IACjC,MACF,IAAK,SACHO,EAAcN,EAEV,CAAC,IAAD,OAAKD,EAAL,UAAuB,CAAEH,OAAQ,CAAEI,MAAAA,KADnC,MAQR,iBAAC,iFACCG,EAAU,YADX,KAICC,EAJD,KAISE,GAJT,qCAI8Bb,EAAWc,IAAXd,MAAAA,GAAU,OAAQa,IAJhD,mDAKCH,EAAU,WALX,2CAAD,EAOD,GAAE,CAACJ,EAAUC,IAEPnB,EAAO,CAACA,EAAMqB,GAAU,CAAC,GAAIA,EACrC,C,gGCXD,UAvBa,WAAO,IAAD,EACjB,GAAgDD,EAAAA,EAAAA,UAAS,IAAzD,eAAOO,EAAP,KAAyBC,EAAzB,KACA,GAA+BX,EAAAA,EAAAA,GAAS,YAA/BjB,GAAT,eAASA,KACHK,GAAWwB,EAAAA,EAAAA,MAKjB,OAJAL,EAAAA,EAAAA,YAAU,WACRxB,GAAQ4B,EAAoB5B,EAAK8B,QAClC,GAAE,CAAC9B,KAGF,iCACE,4CACA,SAAC,IAAD,oBACG2B,EAAiBI,cADpB,QAEIJ,EAAiBK,KAAI,SAAAC,GACnB,OACE,SAAC,IAAD,CAA6BjC,KAAMiC,EAAM5B,SAAUA,GAA/B4B,EAAKhC,GAE5B,QAIV,C","sources":["components/MovieGrid/MovieGrid.js","components/MovieGridItem/MovieGridItem.styled.js","components/MovieGridItem/MovieGridItem.jsx","services/request-config.js","hooks/useFetch.js","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GridConteiner = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import styled from 'styled-components';\n\nexport const LinkThumb = styled('div')`\n  margin: 5px;\n  display: block;\n  width: 23%;\n  display: flex;\n  flex-direction: column;\n  /* justify-content: center; */\n  a {\n    color: black;\n    text-decoration: none;\n  }\n`;\nexport const LinkImg = styled('img')`\n  width: 100%;\n`;\nexport const MovieYear = styled('span')``;\nexport const MovieTitle = styled('p')`\n  margin: 10px 0 0 0;\n`;\n","import {\n  LinkThumb,\n  MovieYear,\n  LinkImg,\n  MovieTitle,\n} from './MovieGridItem.styled';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MovieGridItem = ({\n  data: { id, title, release_date, poster_path },\n  location,\n}) => {\n  return (\n    <LinkThumb>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <LinkImg src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt=\"\" />\n\n        <MovieTitle>{`${title}`}</MovieTitle>\n        <MovieYear>{`(${release_date.split('-')[0]})`}</MovieYear>\n      </Link>{' '}\n    </LinkThumb>\n  );\n};\n\nMovieGridItem.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n  }),\n  location: PropTypes.object,\n};\n","import axios from 'axios';\n\nexport const tmdbConfig = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: `46e4b076bb2368b618b662908195e79d`,\n  },\n});\n","import { useState, useEffect } from 'react';\n\nimport { tmdbConfig } from 'services/request-config';\n\nexport const useFetch = (endpoint, query) => {\n  const [status, setStatus] = useState('idle');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    let requestUrl;\n    switch (endpoint) {\n      case 'trending':\n        requestUrl = [`${endpoint}/movie/week`];\n        break;\n      case 'movie':\n        requestUrl = [`/movie/${query}`];\n        break;\n      case 'credits':\n      case 'reviews':\n        requestUrl = [`/movie/${query}/${endpoint}`];\n        break;\n      case 'search':\n        requestUrl = !query\n          ? null\n          : [`/${endpoint}/movie`, { params: { query } }];\n\n        break;\n      default:\n        break;\n    }\n\n    (async () => {\n      setStatus('fetching');\n      // const data = requestUrl && (await tmdbConfig.get(...requestUrl));\n\n      setData(requestUrl && (await tmdbConfig.get(...requestUrl)));\n      setStatus('fetched');\n    })();\n  }, [endpoint, query]);\n\n  return data ? [data, status] : [[], status];\n};\n\n// export const App = () => {\n//   const [query, setQuery] = useState('');\n//   const [status, data] = useFetch(query);\n\n//   useEffect(() => {\n//     if (data.length) {\n//       console.log(data);\n//       console.log(status);\n//     }\n//   }, [data, status]);\n\n//   const onInputChange = e => {\n//     e.preventDefault();\n//     setQuery(e.target.name.value);\n//   };\n\n//   return (\n//     <div>\n//       <form action=\"\" onSubmit={onInputChange}>\n//         <input type=\"text\" name=\"name\"></input>\n//         <button type=\"submit\">Запрос</button>\n//       </form>\n//     </div>\n//   );\n// };\n","import { useState, useEffect } from 'react';\nimport { MovieGridItem } from 'components/MovieGridItem/MovieGridItem';\n\nimport { useFetch } from 'hooks/useFetch';\nimport { GridConteiner } from 'components/MovieGrid/MovieGrid';\nimport { useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const [trendingFilmList, setTrendingFilmList] = useState([]);\n  const [{ data } /*status */] = useFetch('trending');\n  const location = useLocation();\n  useEffect(() => {\n    data && setTrendingFilmList(data.results);\n  }, [data]);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      <GridConteiner>\n        {trendingFilmList.lenght ??\n          trendingFilmList.map(item => {\n            return (\n              <MovieGridItem key={item.id} data={item} location={location} />\n            );\n          })}\n      </GridConteiner>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["GridConteiner","styled","LinkThumb","LinkImg","MovieYear","MovieTitle","MovieGridItem","data","id","title","release_date","poster_path","location","to","state","from","src","alt","split","tmdbConfig","axios","baseURL","params","api_key","useFetch","endpoint","query","useState","status","setStatus","setData","useEffect","requestUrl","get","trendingFilmList","setTrendingFilmList","useLocation","results","lenght","map","item"],"sourceRoot":""}