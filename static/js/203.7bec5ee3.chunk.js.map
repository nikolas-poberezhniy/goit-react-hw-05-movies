{"version":3,"file":"static/js/203.7bec5ee3.chunk.js","mappings":"gOAEaA,E,MAAaC,GAAAA,OAAa,CACrCC,QAAS,gCACTC,OAAQ,CACNC,QAAQ,sCCDCC,EAAW,SAACC,EAAUC,GACjC,OAA4BC,EAAAA,EAAAA,UAAS,QAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KAkCA,OAhCAC,EAAAA,EAAAA,YAAU,WACR,IAAIC,EACJ,OAAQR,GACN,IAAK,WACHQ,EAAa,CAAC,GAAD,OAAIR,EAAJ,gBACb,MACF,IAAK,QACHQ,EAAa,CAAC,UAAD,OAAWP,IACxB,MACF,IAAK,UACL,IAAK,UACHO,EAAa,CAAC,UAAD,OAAWP,EAAX,YAAoBD,IACjC,MACF,IAAK,SACHQ,EAAcP,EAEV,CAAC,IAAD,OAAKD,EAAL,UAAuB,CAAEH,OAAQ,CAAEI,MAAAA,KADnC,MAQR,iBAAC,iFACCG,EAAU,YADX,KAICE,EAJD,KAISE,GAJT,qCAI8Bd,EAAWe,IAAXf,MAAAA,GAAU,OAAQc,IAJhD,mDAKCJ,EAAU,WALX,2CAAD,EAOD,GAAE,CAACJ,EAAUC,IAEPI,EAAO,CAACA,EAAMF,GAAU,CAAC,GAAIA,EACrC,C,oHCrCc,SAASO,IACtB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BT,EAAAA,EAAAA,UAAS,IAAvC,eAAOQ,EAAP,KAAgBG,EAAhB,KAEA,GAA+Bd,EAAAA,EAAAA,GAAS,UAAWY,GAA1CN,GAAT,eAASA,KAMT,OAJAE,EAAAA,EAAAA,YAAU,WACRF,GAAQQ,EAAWR,EAAKS,QACzB,GAAE,CAACT,KAGF,8BACGK,EAAQK,OAAS,IAChB,wBACGL,EAAQM,KAAI,gBAAGL,EAAH,EAAGA,GAAIM,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,QAA3B,OACX,2BACE,4DAAWD,MACX,uBAAID,EAAWG,UAAU,EAAG,OAC5B,uBAAID,MAHGR,EADE,OAWtB,C","sources":["services/request-config.js","hooks/useFetch.js","pages/Movies/components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const tmdbConfig = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: `46e4b076bb2368b618b662908195e79d`,\n  },\n});\n","import { useState, useEffect } from 'react';\n\nimport { tmdbConfig } from 'services/request-config';\n\nexport const useFetch = (endpoint, query) => {\n  const [status, setStatus] = useState('idle');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    let requestUrl;\n    switch (endpoint) {\n      case 'trending':\n        requestUrl = [`${endpoint}/movie/week`];\n        break;\n      case 'movie':\n        requestUrl = [`/movie/${query}`];\n        break;\n      case 'credits':\n      case 'reviews':\n        requestUrl = [`/movie/${query}/${endpoint}`];\n        break;\n      case 'search':\n        requestUrl = !query\n          ? null\n          : [`/${endpoint}/movie`, { params: { query } }];\n\n        break;\n      default:\n        break;\n    }\n\n    (async () => {\n      setStatus('fetching');\n      // const data = requestUrl && (await tmdbConfig.get(...requestUrl));\n\n      setData(requestUrl && (await tmdbConfig.get(...requestUrl)));\n      setStatus('fetched');\n    })();\n  }, [endpoint, query]);\n\n  return data ? [data, status] : [[], status];\n};\n\n// export const App = () => {\n//   const [query, setQuery] = useState('');\n//   const [status, data] = useFetch(query);\n\n//   useEffect(() => {\n//     if (data.length) {\n//       console.log(data);\n//       console.log(status);\n//     }\n//   }, [data, status]);\n\n//   const onInputChange = e => {\n//     e.preventDefault();\n//     setQuery(e.target.name.value);\n//   };\n\n//   return (\n//     <div>\n//       <form action=\"\" onSubmit={onInputChange}>\n//         <input type=\"text\" name=\"name\"></input>\n//         <button type=\"submit\">Запрос</button>\n//       </form>\n//     </div>\n//   );\n// };\n","import { useFetch } from 'hooks/useFetch';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function Reviews() {\n  const { id } = useParams();\n  const [Reviews, setReviews] = useState([]);\n\n  const [{ data } /*status */] = useFetch('reviews', id);\n\n  useEffect(() => {\n    data && setReviews(data.results);\n  }, [data]);\n\n  return (\n    <>\n      {Reviews.length > 0 && (\n        <ul>\n          {Reviews.map(({ id, created_at, author, content }) => (\n            <li key={id}>\n              <p>Автор: {author}</p>\n              <p>{created_at.substring(0, 10)}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["tmdbConfig","axios","baseURL","params","api_key","useFetch","endpoint","query","useState","status","setStatus","data","setData","useEffect","requestUrl","get","Reviews","id","useParams","setReviews","results","length","map","created_at","author","content","substring"],"sourceRoot":""}